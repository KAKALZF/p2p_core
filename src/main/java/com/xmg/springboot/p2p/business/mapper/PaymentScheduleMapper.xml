<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xmg.springboot.p2p.business.mapper.PaymentScheduleMapper">
	<resultMap id="BaseResultMap"
		type="com.xmg.springboot.p2p.business.domain.PaymentSchedule">
		<id column="id" property="id" jdbcType="BIGINT" />
		<result column="deadLine" property="deadLine" jdbcType="TIMESTAMP" />
		<result column="payDate" property="payDate" jdbcType="TIMESTAMP" />
		<result column="totalAmount" property="totalAmount" jdbcType="DECIMAL" />
		<result column="principal" property="principal" jdbcType="DECIMAL" />
		<result column="interest" property="interest" jdbcType="DECIMAL" />
		<result column="monthIndex" property="monthIndex" jdbcType="TINYINT" />
		<result column="state" property="state" jdbcType="TINYINT" />
		<result column="bidRequestType" property="bidRequestType"
			jdbcType="TINYINT" />
		<result column="returnType" property="returnType" jdbcType="TINYINT" />
		<result column="bidRequest_id" property="bidRequestId"
			jdbcType="BIGINT" />
		<result column="bidRequestTitle" property="bidRequestTitle"
			jdbcType="VARCHAR" />
		<association property="borrowUser" columnPrefix="bu_"
			javaType="com.xmg.springboot.p2p.base.domain.Logininfo">
			<id column="id" property="id"></id>
			<result column="username" property="username" />
		</association>
		<collection property="paymentScheduleDetails"
			ofType="com.xmg.springboot.p2p.business.domain.PaymentScheduleDetail"
			select="com.xmg.springboot.p2p.business.mapper.PaymentScheduleDetailMapper.selectByPaymentScheduleId"
			column="id"></collection>
	</resultMap>
	<insert id="insert" useGeneratedKeys="true" keyProperty="id">
		insert
		into paymentschedule (deadLine, payDate, totalAmount,
		principal,
		interest, monthIndex,
		state, bidRequestType, returnType,
		bidRequest_id,
		borrowUser_id, bidRequestTitle
		)
		values (#{deadLine,jdbcType=TIMESTAMP},
		#{payDate,jdbcType=TIMESTAMP},
		#{totalAmount,jdbcType=DECIMAL},
		#{principal,jdbcType=DECIMAL}, #{interest,jdbcType=DECIMAL},
		#{monthIndex,jdbcType=TINYINT},
		#{state,jdbcType=TINYINT},
		#{bidRequestType,jdbcType=TINYINT},
		#{returnType,jdbcType=TINYINT},
		#{bidRequestId,jdbcType=BIGINT}, #{borrowUser.id,jdbcType=BIGINT},
		#{bidRequestTitle,jdbcType=VARCHAR}
		)
	</insert>
	<update id="updateByPrimaryKey">
		update paymentschedule
		set
		deadLine =
		#{deadLine,jdbcType=TIMESTAMP},
		payDate =
		#{payDate,jdbcType=TIMESTAMP},
		totalAmount =
		#{totalAmount,jdbcType=DECIMAL},
		principal =
		#{principal,jdbcType=DECIMAL},
		interest = #{interest,jdbcType=DECIMAL},
		monthIndex = #{monthIndex,jdbcType=TINYINT},
		state =
		#{state,jdbcType=TINYINT},
		bidRequestType =
		#{bidRequestType,jdbcType=TINYINT},
		returnType =
		#{returnType,jdbcType=TINYINT},
		bidRequest_id =
		#{bidRequestId,jdbcType=BIGINT},
		borrowUser_id =
		#{borrowUser.id,jdbcType=BIGINT},
		bidRequestTitle =
		#{bidRequestTitle,jdbcType=VARCHAR}
		where id = #{id,jdbcType=BIGINT}
	</update>
	<sql id="base_column">
		ps.id, ps.deadLine, ps.payDate, ps.totalAmount,
		ps.principal,
		ps.interest,
		ps.monthIndex,
		ps.state,
		ps.bidRequestType,
		ps.returnType, ps.bidRequest_id,
		ps.borrowUser_id,
		ps.bidRequestTitle,bu.id as bu_id,bu.username as
		bu_username
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Long">
		select
		<include refid="base_column"></include>
		from paymentschedule ps left
		join logininfo bu on
		ps.borrowUser_id=
		bu.id
		where ps.id =
		#{id,jdbcType=BIGINT}
	</select>

	<sql id="base_where">
		<where>
			<if test="beginDate!=null">
				And ps.deadLine &gt;=#{beginDate}
			</if>
			<if test="endDate!=null">
				And ps.deadLine &lt;=#{endDate}
			</if>
			<if test="state!=-1">
				And ps.state=#{state}
			</if>
		</where>
	</sql>
	<select id="queryForCount" resultType="int">
		select count(ps.id)
		from
		paymentschedule ps
	</select>
	<select id="query" resultMap="BaseResultMap">
		select
		<include refid="base_column"></include>
		from paymentschedule ps left
		join logininfo bu on
		ps.borrowUser_id=
		bu.id
		<include refid="base_where"></include>
		limit #{beginIndex},#{pageSize}
	</select>
	<select id="listByBidRequestId" resultMap="BaseResultMap">
		select
		<include refid="base_column" />
		from paymentschedule ps left
		join logininfo bu on
		ps.borrowUser_id=
		bu.id where ps.bidRequest_id=#{bidRequestId}
	</select>
</mapper>