<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xmg.springboot.p2p.base.mapper.UserfileMapper">
	<resultMap id="BaseResultMap" type="com.xmg.springboot.p2p.base.domain.Userfile">
		<id column="id" property="id" jdbcType="BIGINT" />
		<result column="state" property="state" jdbcType="TINYINT" />
		<result column="remark" property="remark" jdbcType="VARCHAR" />
		<result column="auditTime" property="auditTime" jdbcType="TIMESTAMP" />
		<result column="applyTime" property="applyTime" jdbcType="TIMESTAMP" />
		<result column="score" property="score" jdbcType="TINYINT" />
		<result column="image" property="image" jdbcType="VARCHAR" />
		<association columnPrefix="au_"
			javaType="com.xmg.springboot.p2p.base.domain.Logininfo" property="auditor">
			<id column="id" property="id" />
			<result column="username" property="username" />
		</association>
		<association columnPrefix="ap_"
			javaType="com.xmg.springboot.p2p.base.domain.Logininfo" property="applier">
			<id column="id" property="id" />
			<result column="username" property="username" />
		</association>
		<association property="fileType"
			javaType="com.xmg.springboot.p2p.base.domain.SystemDictionaryItem"
			columnPrefix="ft_">
			<id column="id" property="id"></id>
			<result column="title" property="title" />
		</association>
	</resultMap>
	<insert id="insert" parameterType="com.xmg.springboot.p2p.base.domain.Userfile"
		useGeneratedKeys="true" keyProperty="id">
		insert into userfile (state,
		remark, auditTime,
		applyTime, auditor_id, applier_id,
		score, image,
		fileType_id
		)
		values (#{state,jdbcType=TINYINT},
		#{remark,jdbcType=VARCHAR},
		#{auditTime,jdbcType=TIMESTAMP},
		#{applyTime,jdbcType=TIMESTAMP}, #{auditor.id,jdbcType=BIGINT},
		#{applier.id,jdbcType=BIGINT},
		#{score,jdbcType=TINYINT},
		#{image,jdbcType=VARCHAR},
		#{fileType.id,jdbcType=BIGINT}
		)
	</insert>
	<update id="updateByPrimaryKey" parameterType="com.xmg.springboot.p2p.base.domain.Userfile">
		update userfile
		set state = #{state,jdbcType=TINYINT},
		remark =
		#{remark,jdbcType=VARCHAR},
		auditTime =
		#{auditTime,jdbcType=TIMESTAMP},
		applyTime =
		#{applyTime,jdbcType=TIMESTAMP},
		auditor_id =
		#{auditor.id,jdbcType=BIGINT},
		applier_id =
		#{applier.id,jdbcType=BIGINT},
		score = #{score,jdbcType=TINYINT},
		image
		=
		#{image,jdbcType=VARCHAR},
		fileType_id =
		#{fileType.id,jdbcType=BIGINT}
		where id = #{id,jdbcType=BIGINT}
	</update>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Long">
		select f.id, f.state, f.remark, f.auditTime,
		f.applyTime,
		f.auditor_id, f.applier_id,
		f.score, f.image,
		f.fileType_id,ap.id as
		ap_id,ap.username as
		ap_username,
		au.id as
		au_id,au.username as
		au_username,ft.id as ft_id, ft.title as ft_tilte
		from userfile f left
		join logininfo ap on f.applier_id=ap.id
		left join
		logininfo au on
		f.auditor_id=au.id
		left join
		systemDictionaryItem ft on
		f.fileType_id=ft.id
		where f.id =
		#{id,jdbcType=BIGINT}
	</select>
	<sql id="base_colunm">
		f.id, f.state, f.remark, f.auditTime, f.applyTime,
		f.auditor_id,
		f.applier_id,
		f.score,
		f.image,
		f.fileType_id,ap.id as
		ap_id,ap.username as
		ap_username,
		au.id as
		au_id,au.username as
		au_username,ft.id as ft_id,
		ft.title as
		ft_tilte
	</sql>
	<sql id="base_table">
		userfile f left
		join logininfo ap on f.applier_id=ap.id
		left
		join logininfo au on
		f.auditor_id=au.id
		left join
		systemDictionaryItem ft
		on
		f.fileType_id=ft.id
	</sql>
	<select id="listSelectTypeUserFiles" resultMap="BaseResultMap">
		select
		<include refid="base_colunm"></include>
		from
		<include refid="base_table"></include>
		where f.applier_id=#{id}
		<if test="selected"> AND f.fileType_id is not null </if>
		<if test="!selected"> AND f.fileType_id is null </if>
	</select>
	<sql id="base_where">
		<where>
			<if test="state!=-1">
				And f.state=#{state}
			</if>
			<if test="beginDate!=null">
				And f.applyTime &gt;= #{beginDate};
			</if>
			<if test="endDate!=null">
				And f.applyTime &lt;= #{endDate};
			</if>
			<if test="userId!=null">
				And f.applier_id=#{userId}
			</if>
		</where>
	</sql>
	<select id="queryForCount" resultType="int">
		select count(id) from
		userfile
		<include refid="base_where"></include>
	</select>
	<select id="query" resultMap="BaseResultMap">
		select f.id,f.score,f.state,f.image,ap.username as ap_username,
		au.username
		as
		au_username ,ft.id as ft_id, ft.title as ft_title
		from
		<include refid="base_table"></include>
		<include refid="base_where"></include>
		<if test="pageSize>0">
			LIMIT #{beginIndex},#{pageSize}
		</if>
	</select>


</mapper>