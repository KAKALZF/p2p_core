<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xmg.springboot.p2p.business.mapper.RechargeOfflineMapper">
	<resultMap id="BaseResultMap"
		type="com.xmg.springboot.p2p.business.domain.RechargeOffline">
		<id column="id" property="id" jdbcType="BIGINT" />
		<result column="state" property="state" jdbcType="TINYINT" />
		<result column="remark" property="remark" jdbcType="VARCHAR" />
		<result column="auditTime" property="auditTime" jdbcType="TIMESTAMP" />
		<result column="applyTime" property="applyTime" jdbcType="TIMESTAMP" />
		<result column="tradeCode" property="tradeCode" jdbcType="VARCHAR" />
		<result column="tradeTime" property="tradeTime" jdbcType="TIMESTAMP" />
		<result column="amount" property="amount" jdbcType="DECIMAL" />
		<result column="note" property="note" jdbcType="VARCHAR" />
		<association columnPrefix="au_"
			javaType="com.xmg.springboot.p2p.base.domain.Logininfo" property="auditor">
			<id column="id" property="id" />
			<result column="username" property="username" />
		</association>
		<association columnPrefix="ap_"
			javaType="com.xmg.springboot.p2p.base.domain.Logininfo" property="applier">
			<id column="id" property="id" />
			<result column="username" property="username" />
		</association>
		<association property="bankInfo"
			javaType="com.xmg.springboot.p2p.business.domain.PlatformBankInfo"
			columnPrefix="bi_"
			resultMap="com.xmg.springboot.p2p.business.mapper.PlatformBankInfoMapper.BaseResultMap"></association>
	</resultMap>
	<insert id="insert" useGeneratedKeys="true" keyProperty="id">
		insert
		into rechargeoffline (state, remark, auditTime,
		applyTime, auditor_id,
		applier_id,
		tradeCode, tradeTime, amount,
		note, bankInfo_id)
		values
		(#{state,jdbcType=TINYINT}, #{remark,jdbcType=VARCHAR},
		#{auditTime,jdbcType=TIMESTAMP},
		#{applyTime,jdbcType=TIMESTAMP},
		#{auditor.id,jdbcType=BIGINT}, #{applier.id,jdbcType=BIGINT},
		#{tradeCode,jdbcType=VARCHAR}, #{tradeTime,jdbcType=TIMESTAMP},
		#{amount,jdbcType=DECIMAL},
		#{note,jdbcType=VARCHAR},
		#{bankInfo.id,jdbcType=BIGINT})
	</insert>
	<update id="updateByPrimaryKey">
		update rechargeoffline
		set state
		=
		#{state,jdbcType=TINYINT},
		remark = #{remark,jdbcType=VARCHAR},
		auditTime = #{auditTime,jdbcType=TIMESTAMP},
		applyTime =
		#{applyTime,jdbcType=TIMESTAMP},
		auditor_id =
		#{auditor.id,jdbcType=BIGINT},
		applier_id =
		#{applier.id,jdbcType=BIGINT},
		tradeCode =
		#{applyTime,jdbcType=VARCHAR},
		tradeTime =
		#{tradeTime,jdbcType=TIMESTAMP},
		amount = #{amount,jdbcType=DECIMAL},
		note = #{note,jdbcType=VARCHAR},
		bankInfo_id =
		#{bankInfo.id,jdbcType=BIGINT}
		where id = #{id,jdbcType=BIGINT}
	</update>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Long">
		SELECT
		<include refid="base_column"></include>
		FROM
		rechargeoffline r
		<include refid="base_table"></include>
		where r.id
		= #{id,jdbcType=BIGINT}
	</select>
	<!--基本列 -->
	<sql id="base_column">
		r.id, r.state, r.remark, r.auditTime,
		r.applyTime,r.auditor_id,
		r.applier_id,
		r.tradeCode,r.tradeTime,r.amount, r.note,
		r.bankInfo_id,ap.id as
		ap_id,ap.username as
		ap_username,au.id as
		au_id,au.username as
		au_username,bi.id as bi_id, bi.bankname as
		bi_bankname ,
		bi.accountname
		as bi_accountname, bi.accountNumber as
		bi_accountNumber,
		bi.forkname as
		bi_forkname
	</sql>
	<!-- 基本表 -->
	<sql id="base_table">
		join
		logininfo ap on
		r.applier_id=ap.id
		LEFT JOIN
		logininfo au
		on
		r.auditor_id
		= au.id left join platformbankinfo bi on
		r.bankInfo_id =
		bi.id
	</sql>
	<select id="selectAll" resultMap="BaseResultMap">
		select
		<include refid="base_column"></include>
		from rechargeoffline r
		<include refid="base_table"></include>
	</select>

	<!--查询条件 -->
	<sql id="base_where">
		<where>
			<if test="beginDate!=null">
				And r.tradeTime &gt;=#{beginDate}
			</if>
			<if test="endDate!=null">
				And r.tradeTime &lt;=#{endDate}
			</if>
			<if test="state!=-1">
				And r.state=#{state}
			</if>
			<if test="bankInfoId!=-1">
				And r.bankInfo_id=#{bankInfoId}
			</if>
			<if test="tradeCode!=null">
				And r.tradeCode=#{tradeCode}
			</if>
		</where>
	</sql>
	<select id="queryForCount" resultType="int">
		select count(r.id) from rechargeoffline r
		<include refid="base_where"></include>
	</select>
	<select id="query" resultMap="BaseResultMap">
		select
		<include refid="base_column"></include>
		from rechargeoffline r
		<include refid="base_table"></include>
		<include refid="base_where"></include>
		limit #{beginIndex},#{pageSize}
	</select>
</mapper>